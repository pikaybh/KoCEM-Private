name: Sync results to external repository

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: sync-external-${{ github.ref }}
  cancel-in-progress: false

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      SRC_DIR: .
      TARGET_PATH_IN_REPO: .
      BRANCH_PREFIX: kocem-sync
      TARGET_BASE: main
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4

      - name: Initialize target repository (supports empty repos)
        run: |
          set -e
          REPO="${{ vars.TARGET_REPO }}"
          if [ -z "$REPO" ]; then REPO="${{ secrets.TARGET_REPO }}"; fi
          echo "REPO=$REPO" >> $GITHUB_ENV
          mkdir -p target_repo
          cd target_repo
          git init
          git remote add origin "https://x-access-token:${{ secrets.TARGET_REPO_TOKEN }}@github.com/${REPO}.git"
          # Try to fetch base; if missing, we'll create it later
          if git ls-remote --exit-code --heads origin "${TARGET_BASE}" >/dev/null 2>&1; then
            git fetch origin "${TARGET_BASE}:${TARGET_BASE}"
            git checkout "${TARGET_BASE}"
          else
            echo "Base branch ${TARGET_BASE} not found; will create an empty base later."
          fi

      - name: Ensure base branch exists (create empty if needed)
        working-directory: target_repo
        run: |
          set -e
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git remote set-url origin "https://x-access-token:${{ secrets.TARGET_REPO_TOKEN }}@github.com/${REPO}.git"
          if ! git rev-parse --verify "${TARGET_BASE}" >/dev/null 2>&1; then
            git checkout --orphan "${TARGET_BASE}"
            git commit --allow-empty -m "Initialize base branch ${TARGET_BASE}"
            git push -u origin "${TARGET_BASE}"
          fi

      - name: Prepare feature branch in target repository
        id: prep_branch
        working-directory: target_repo
        run: |
          set -e
          BRANCH="${BRANCH_PREFIX}-${GITHUB_SHA::7}"
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          git checkout -B "$BRANCH"

      - name: Copy repository contents into target repository (with output filter)
        run: |
          rsync -a --delete \
            --exclude 'target_repo' \
            --exclude '.git' \
            --exclude '.github/workflows/**' \
            --filter '+ /output/' \
            --filter '+ /output/mcqa/' \
            --filter '+ /output/mcqa/en/' \
            --filter '+ /output/mcqa/en/gpt-4.1/' \
            --filter '+ /output/mcqa/en/gpt-4.1/val/**' \
            --filter '- /output/**' \
            ./ target_repo/

      - name: Commit and push changes
        id: commit_push
        working-directory: target_repo
        run: |
          git add -A
          git remote set-url origin "https://x-access-token:${{ secrets.TARGET_REPO_TOKEN }}@github.com/${REPO}.git"
          if git diff --cached --quiet; then
            echo "no_changes=true" >> $GITHUB_OUTPUT
            echo "No changes to commit."
          else
            git commit -m "KoCEM: sync ${TARGET_PATH_IN_REPO} from ${GITHUB_REPOSITORY}@${GITHUB_SHA::7}"
            git push -u origin "${{ steps.prep_branch.outputs.branch }}"
          fi

      - name: Create pull request in target repository
        if: ${{ steps.commit_push.outputs.no_changes != 'true' }}
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.TARGET_REPO_TOKEN }}
          path: target_repo
          branch: ${{ steps.prep_branch.outputs.branch }}
          base: ${{ env.TARGET_BASE }}
          title: "KoCEM: Sync ${TARGET_PATH_IN_REPO}"
          body: |
            This PR syncs `${{ env.TARGET_PATH_IN_REPO }}` from `${{ github.repository }}` at commit `${{ github.sha }}`.
            Generated automatically by the `sync-to-external` workflow.
